use Northwind
----cau 2
--select CustomerID, CompanyName, ContactName, Address, City 
--from Customers
--where City = 'London'
--cau 3
--select CustomerID, CompanyName, ContactName, Address, City, ContactTitle 
--from Customers
--where ContactTitle ='Sales Manager' and Country ='USA' or ContactTitle ='Owner' and Country ='Mexico'
--cau 4
--select CustomerID, CompanyName, ContactName, Address, City, ContactTitle, Country 
--from Customers
--where ContactTitle like '%Manager' and Country ='USA' or (not ContactTitle ='Owner' and Country ='Mexico')
--like (%,_)
--cau 5
--set dateformat dmy
--select OrderID, OrderDate, CustomerID, EmployeeID
--from Orders
--where OrderDate between '1/1/1997' and '30/6/1997'
--cau 6
--set dateformat dmy
--select OrderID, OrderDate, CustomerID, EmployeeID
--from Orders
--where OrderDate between '1/2/1997' and '28/2/1997'
--cau 7
--select OrderID, OrderDate, Freight 
--from Orders
--where ShipCountry='UK' and EmployeeID = '2' and YEAR(OrderDate) = '1997'
--cau 8
--select ProductID, ProductName
--from Products
--where ProductName like 'Ch%'
--cau 9
--select ProductID, UnitPrice, UnitsInStock
--from Products
--where Discontinued != 'False' and UnitsInStock > 0
--cau 10
--select CompanyName, ContactName, Country, Phone, Fax
--from Customers
--where Country != 'USA'
--cau 11
select CompanyName, ContactName, Country, Phone, Fax 
from Customers
where Country not in ('Brazil', 'Italy', 'Spain', 'Venezuela','UK')
--cau 12
select OrderID, o.CustomerID, e.EmployeeID, Orderdate, ShipCountry, Shippeddate, Freight
from Orders o, Employees e, Customers c
where (o.CustomerID = c.CustomerID and o.EmployeeID = e.EmployeeID)
and (ShipCountry = 'USA' and Freight > 300 or ShipCountry = 'Argentina'
and Freight < 5)
order by e.EmployeeID desc
--cau 14
set dateformat dmy
select OrderID, OrderDate, o.CustomerID, e.EmployeeID, Freight, Freight * 1.1 as NewFreight
from Orders o, Employees e, Customers c
where OrderDate between '1/4/1997' and '30/4/1997' and (o.CustomerID = c.CustomerID and o.EmployeeID = e.EmployeeID)
--cau 15
select ProductID, ProductName, x.SupplierID, UnitPrice, UnitsInStock, Total = x.UnitPrice * x.UnitsInStock, y.Fax
from Products x, Suppliers y
where x.Discontinued = 1 and x.SupplierID = y.SupplierID
--cau 16
select Name = TitleOfCourtesy + ' ' + LEFT(LastName, 1) + ' ' + FirstName, Hiredate, Title, BirthDate, HomePhone
from Employees
where Year(HireDate) <= 1993
--cau 17
select OrderID, OrderDate, 'Customer' = CompanyName , Employee = LastName
from Orders o, Customers c, Employees e
where Month(OrderDate) = 4 and o.EmployeeID = e.EmployeeID and c.CustomerID = o.CustomerID
--cau 18
select OrderID, OrderDate, 'Customer' = CompanyName , Employee = LastName
from Orders o, Customers c, Employees e
where YEAR(OrderDate) % 2 = 0 and o.EmployeeID = e.EmployeeID and c.CustomerID = o.CustomerID
--cau 19
select OrderID, OrderDate, 'Customer' = CompanyName , Employee = LastName
from Orders o, Customers c, Employees e
where DAY(OrderDate) in (5,13,14,23) and o.EmployeeID = e.EmployeeID and c.CustomerID = o.CustomerID
--cau 20
select od.OrderID, ProductName, p.UnitPrice, Quantity,  p.UnitPrice* Quantity as ThanhTien, Discount,  p.UnitPrice* Quantity * Discount as TienGiamGia, TienPhaiTra =  p.UnitPrice* Quantity -  p.UnitPrice* Quantity * Discount
from [Order Details] od, Products p, Orders o
where YEAR(OrderDate) = 1997 and od.ProductID = p.ProductID and o.OrderID = od.OrderID
--cau 21
select od.OrderID, ProductName, p.UnitPrice, Quantity,  p.UnitPrice* Quantity as ThanhTien, Discount,  p.UnitPrice* Quantity * Discount as TienGiamGia, 'TienPhaiTra' =  p.UnitPrice* Quantity -  p.UnitPrice* Quantity * Discount
from [Order Details] od, Products p, Orders o
where YEAR(OrderDate) = 1997 and od.ProductID = p.ProductID and o.OrderID = od.OrderID and Discount > 0 and p.UnitPrice* Quantity -  p.UnitPrice* Quantity * Discount < 50
--cau 22
select COUNT(ProductID)  as SLSP, MAX(UnitPrice) as mac, MIN(UnitPrice) miin, AVG(UnitPrice) as TB
from Products
--cau 23
select COUNT(ProductID)  as SLSP, MAX(UnitPrice) as mac, MIN(UnitPrice) miin, AVG(UnitPrice) as TB
from Products
group by CategoryID
--cau 24
select Count(OrderID) as 'Số Đơn đặt hàng'
from Orders
where ShipCountry in ('Belgium', 'Canada', 'UK')
--cau 25
select AVG(UnitPrice) as TB, c.CategoryID, CategoryName
from Products p, Categories c
where c.CategoryID = p.CategoryID and UnitPrice > 30
group by c.CategoryID, CategoryName
--cau 26
select AVG(UnitPrice) as 'Đơn giá tb', CategoryID as 'Ma SP'
from Products
where UnitPrice > 30
group by CategoryID
--order by 1 asc
select * 
from Categories
where CategoryID in (
 select CategoryID
 from Products
 group by CategoryID
 having AVG(UnitPrice) > 30
 )

--cau 27
select c.CategoryName, SUM(od.UnitPrice * Quantity * (1 - Discount)) as salesTotal
from Products p, Categories c, [Order Details] od, Orders o
where YEAR(OrderDate) = 1996 and o.OrderID = od.OrderID and
od.ProductID = p.ProductID and p.CategoryID = c.CategoryID 
group by CategoryName
--cau 28
select CompanyName, Freight, SUM(od.UnitPrice * Quantity * (1 - Discount)) as salesTotal,
'Percent' = Freight / SUM(od.UnitPrice * Quantity * (1 - Discount))
from Customers c, Orders o, [Order Details] od
where YEAR(OrderDate) = 1997 and od.OrderID = o.OrderID and o.CustomerID = c.CustomerID
group by CompanyName, Freight
--cau 29
declare @TenCT nvarchar(40)
set @TenCT = '%h%'
select *
from Customers
where CompanyName like @TenCT

--cau 30
declare @ngayBD datetime, @ngayKT datetime
set @ngayBD='1/1/1997'
set @ngayKT='1/9/1997'

set dateformat dmy
select *
from Orders
where OrderDate between @ngayBD and @ngayKT
--cau 35 36 trg dth

==================================================================================================
use Northwind
--MAKE TABLE QUERY
--cau 1
select * into CacKhachHangMy
from Customers

select *
from CacKhachHangMy
--cau 2
select top 5 e.EmployeeID, e.FirstName + ' ' + e.LastName as 'FullName' 
, count(OrderID) as 'Đơn hàng' into NamNhanVienGioi
from Employees e, Orders o
where e.EmployeeID = o.EmployeeID
group by e.EmployeeID, e.FirstName + ' ' + e.LastName
order by 3 desc

select * 
from NamNhanVienGioi
--cau 3
select top 10 c.CustomerID, c.CompanyName, c.Address + ' ' + c.City + ' ' + c.Country as 'address'
,count(OrderID) as SL into MuoiKhachHang
from Customers c, Orders o
where c.CustomerID = o.CustomerID
group by c.CustomerID, c.CompanyName, c.Address + ' ' + c.City + ' ' + c.Country
order by SL desc

select * 
from MuoiKhachHang
-- cau 4
select top 5 ShipCountry as 'Country', COUNT(od.ProductID) as 'SL'
into Top5QGMuaHang
from Orders o, [Order Details] od 
where o.OrderID = od.OrderID
group by ShipCountry
order by SL desc

select *
from Top5QGMuaHang

--cau 5
select top 5 ShipCountry as 'Country', COUNT(od.ProductID) as 'SL'
into Top5QGItMuaHang
from Orders o, [Order Details] od 
where o.OrderID = od.OrderID
group by ShipCountry
order by SL 

select *
from Top5QGItMuaHang
--APPEND QUERY THÊM 1 HÀNG DỮ LIỆU
--cau 1
insert into Categories(CategoryName, Description)
values (N'Văn phòng phẩm', N'Sách, vở, giấy, bút, mực')

select *
from Categories
--cau 4

insert into Employees( LastName,  FirstName)
values (N'Cảnh', N'Alexander')

select *
from Employees

--APPEND QUERY THÊM NHIỀU HÀNG DỮ LIỆU 
--cau 6
select * into KhachHang
from Customers
delete from KhachHang


insert into KhachHang
select *
from Customers
where Country = 'USA'

select *
from KhachHang
--cau 7
insert into KhachHang
select * 
from Customers
where CustomerID in (
   select top 10 c.CustomerID
   from Customers c, Orders o
   where c.CustomerID = o.CustomerID
   group by c.CustomerID
   order by count(OrderID) desc
)

--UPDATE QUERY
--cau 1
select* into KH
from Customers
update Customers
set Country = 'USA'
where Country = N'Mỹ'
--cau 2
update KH
set Country = (case 
                when Country = 'Germany' then N'Đức'
				else N'Pháp'
                end)
where Country in ('Germany','France' )


--cau 6
update KH
set PostalCode = stuff(PostalCode, 1, 2, '18')
where Country = N'Đức'

delete KH

insert into KH
select* 
from Customers

update KH
set PostalCode = concat('18', SUBSTRING(PostalCode, 3, len(PostalCode) -2))
where Country = 'Germany'


select *
from KH     
--CROSSTAB QUERY
--cau 1
select ProductName, [1996], [1997], [1998]
from(
		select p.ProductName, YEAR(OrderDate) 'nam', Quantity tongSL
		from Orders o, [Order Details] od, Products p
		where o.OrderID = od.OrderID and od.ProductID = p.ProductID
		and YEAR(OrderDate) between '1996' and '1998')A
		--group by p.ProductName, YEAR(OrderDate)
		--)A
pivot
(
    sum(tongSL) for nam in ( [1996], [1997], [1998])
)B

select CompanyName, 'SumTotal' = ISNULL([1], 0) + ISNULL([2], 0) + 
ISNULL([3], 0)+ ISNULL([4], 0) ,[1] , [2] , [3] , [4]

from(
		select CompanyName,
		UnitPrice * Quantity as DoanhSo,DATEPART(q,OrderDate) as quy
		from [Order Details] od, Orders o, Customers c
		where od.OrderID = o.OrderID and o.CustomerID = c.CustomerID
		and YEAR(OrderDate) = 1997 and Country = 'UK')A
pivot
(
   Sum(DoanhSo) for quy in ([1],[2],[3],[4]) 
)B
====================================================================================================
create database ThucHanhDDL
use ThucHanhDDL
go

create table Khoa(
MaKhoa char(4) primary key,
TenKhoa nvarchar(20) not null,
NgayThanhLap date,
NoiDungDaoTao nvarchar(200),
GhiChu nvarchar(max)
)

create table Lop(
MaLop char(6) primary key,
TenLop nvarchar(20) not null,
KhoaHoc nvarchar(4),
GVCN nvarchar(50),
MaKhoa char(4),
ghiChu nvarchar(max)
)
alter table Lop
add constraint fk_Lop_MaKhoa_Khoa
foreign key (MaKhoa) references Khoa(MaKhoa)

create table SinhVien(
MaSV char(8) primary key,
HoSV nvarchar(50) not null,
TenSV text not null,
GioiTinh nvarchar(4),
NgaySinh date,
QueQuan nvarchar(200),
DiaChi nvarchar(100),
MaLop char(6),
GhiChu nvarchar(max)
)

alter table SinhVien
add constraint fk_SinhVien_MaLop_Lop
foreign key(MaLop) references Lop(MaLop)

create table MonHoc(
MaMH int identity(1,1) primary key,
TenMH nvarchar(20) not null,
NoiDungMH nvarchar(200),
MaKhoa char(4),
SoTinChi int,
SoTiet int,
GhiChu nvarchar(max)
)

alter table MonHoc
add constraint fk_MonHoc_MaKhoa_Khoa
foreign key(MaKhoa) references Khoa(MaKhoa)

create table Hoc(
MaSV char(8),
MaMH int,
NgayDangKY date,
NgayThi date,
DiemTB decimal(8,2),
GhiChu nvarchar(max),
primary key(MaSV, MaMH, NgayDangKY)
)
 alter table Hoc
 add constraint fk_Hoc_MaSV_SinhVien
 foreign key (MaSV) references SinhVien(MaSV)

 alter table Hoc
 add constraint fk_Hoc_MaMH_MonHoc
 foreign key (MaMH) references MonHoc(MaMH)

alter table SinhVien
add CMND varchar(9)

alter table SinhVien
add DTDD varchar(10)

alter table SinhVien
alter column DTDD varchar(12)

alter table SinhVien
drop column DTDD

alter table SinhVien
add index indsTenSV

--10.	Viết câu lệnh tạo ràng buộc sau trong bảng Hoc:
--điểm của sinh viên phải nằm trong khoảng từ 0 đến 10.
alter table Hoc
add constraint chk_Hoc_DiemTB
check (DiemTB between 0 and 10)


--11.	Viết câu lệnh tạo ràng buộc sau trong bảng Hoc:
--Ngày thi phải sau ngày hiện tại và ngày đăng ký có giá trị mặc định là ngày hiện tại
alter table Hoc
add constraint chk_Hoc_NgayThi
check (NgayThi > getdate())

alter table Hoc
add constraint df_Hoc_NgayDangKY
default (getdate()) for NgayDangKY

--12.	Viết câu lệnh tạo ràng buộc sau trong bảng Sinh viên:
--Số CMND không được phép trùng

alter table SinhVien
add constraint uq_SinhVien_CMND
unique (CMND)



--CÂU LỆNH DDL
--ALTER TABLE
--	ADD
--	ALTER COLUMN
--	DROP COLUMN
	
--	ADD CONSTRAINT 
--	DROP CONSTRAINT 




--Lấy tên các ràng buộc
Select  SysObjects.[Name] As [Constraint Name] ,
        Tab.[Name] as [Table Name],
        Col.[Name] As [Column Name]
From SysObjects Inner Join 
	(Select [Name],[ID] From SysObjects) As Tab
	On Tab.[ID] = Sysobjects.[Parent_Obj] 
	Inner Join sysconstraints On sysconstraints.Constid = Sysobjects.[ID] 
	Inner Join SysColumns Col On Col.[ColID] = sysconstraints.[ColID] And Col.[ID] = Tab.[ID]
order by [Tab].[Name]
 
--Lấy tên các Proceduce
SELECT name, 
       type
  FROM dbo.sysobjects
 WHERE (type = 'P')
 
 --cẤU TRÚC ĐỀ THI GIỮA KỲ
 /*
 2 PHẦN: TẠO BẢNG CÂU TRUY VẤN
 1 TẠO BẢNG (2Đ) dùng CÂU LỆNH SQL)
 2 VIẾT CÂU TRUY VẤN (8Đ): TRÊN CSDL CÓ SÃN:
	2Đ RÀNG BUỘC (CHECK, DEFAULT, UNIQUE)
	1Đ CÁC LỆNH (INSERT, UPDATE, DELETE)
	5Đ CÁC CÂU SELECT
 */




 create database SinhVienData

 use SinhVienData

 go


 create table MONHOC(
 MAMH char(6) primary key,
 TENMH nvarchar(50) not null,
 TCLT tinyint,
 TCTH tinyint
 )

 create table DIEMSV(
 MSSV char(6),
 MAMH char(6),
 DIEM float,
 PRIMARY KEY(MSSV, MAMH)
 )

 create table SINHVIEN(
 MSSV char(6) PRIMARY KEY,
 HOTEN nvarchar(100) NOT NULL,
 NTNS DATETIME,
 PHAI BIT,
 MALOP CHAR(7) NOT NULL
 )

 CREATE TABLE LOP(
 MALOP CHAR(7) PRIMARY KEY,
 TENLOP NVARCHAR(50),
 SISO TINYINT
 )

 ALTER TABLE DIEMSV
 ADD CONSTRAINT fk_DIEMSV_MAMH_MONHOC
 FOREIGN KEY (MAMH) REFERENCES MONHOC(MAMH)

 ALTER TABLE DIEMSV
 ADD CONSTRAINT fk_DIEMSV_MSSV_SINHVIEN
 FOREIGN KEY (MSSV) REFERENCES SINHVIEN(MSSV)

 ALTER TABLE SINHVIEN
 ADD CONSTRAINT fk_SINHVIEN_MALOP_LOP
 FOREIGN KEY (MALOP) REFERENCES LOP(MALOP)
 
 ALTER TABLE LOP
 ADD CONSTRAINT chk_SISO_LOP
 CHECK (SISO > 0)
 
 ALTER TABLE MONHOC
 ADD CONSTRAINT chk_MONHOC_TCLT
 CHECK (TCLT > 0)

 ALTER TABLE MONHOC
 ADD CONSTRAINT chk_MONHOC_TCTH
 CHECK (TCTH >= 0)

 ALTER TABLE SINHVIEN
 ADD CONSTRAINT df_SINHVIEN_PHAI
 DEFAULT 1 FOR PHAI

 ALTER TABLE DIEMSV
 ADD CONSTRAINT chk_DIEMSV_DIEM
 CHECK (DIEM = NULL OR (DIEM BETWEEN 0 AND 10))

 INSERT LOP VALUES ('18DTH01',N'CNTT Khóa 18 Lớp 1',50)
INSERT LOP VALUES ('18DTH02',N'CNTT Khóa 18, Lớp 2',45)
INSERT LOP VALUES ('19DTH01',N'CNTT Khóa 19, Lớp 1',55)
INSERT LOP VALUES ('19DTH02',N'CNTT Khóa 19, Lớp 2',50)
INSERT LOP VALUES ('19DTH03',N'CNTT Khóa 19, Lớp 3',40)
GO
INSERT MONHOC VALUES ('COS201',N'Kỹ thuật lập trình',2,1)
INSERT MONHOC VALUES ('COS202',N'Lý thuyết đồ thị',2,1)
INSERT MONHOC VALUES ('COS203',N'CSDLvà quản trị CSDL',3,0)
INSERT MONHOC VALUES ('COS204',N'Phân tích thiết kế hệ thống',3,0)
INSERT MONHOC VALUES ('COS205',N'CSDL phân tán',3,0)
GO
SET DATEFORMAT DMY
GO
INSERT SINHVIEN VALUES ('170001',N'Lê Hoài An','12/10/1999',1,'18DTH01')
INSERT SINHVIEN VALUES ('180002',N'Nguyễn Thị Hòa Bình','20/11/2000',1,'18DTH01')
INSERT SINHVIEN VALUES ('180003',N'Phạm Tường Châu','07/06/2000',0,'18DTH02')
INSERT SINHVIEN VALUES ('180004',N'Trần Công Danh','31/01/2000',0,'19DTH01')
GO
INSERT DIEMSV VALUES ('170001','COS201',10.0)
INSERT DIEMSV VALUES ('170001','COS202',10.0)
INSERT DIEMSV VALUES ('170001','COS203',10.0)
INSERT DIEMSV VALUES ('170001','COS204',10.0)
INSERT DIEMSV VALUES ('170001','COS205',10.0)
INSERT DIEMSV VALUES ('180002','COS201',3.5)
INSERT DIEMSV VALUES ('180002','COS202',7.0)
INSERT DIEMSV VALUES ('180003','COS201',8.5)
INSERT DIEMSV VALUES ('180003','COS202',2.0)
INSERT DIEMSV VALUES ('180003','COS203',6.5)
INSERT DIEMSV VALUES ('180004','COS201',8.0)
INSERT DIEMSV VALUES ('180004','COS204',NULL)



USE MASTER
GO
IF EXISTS(SELECT NAME FROM SYS.DATABASES WHERE NAME='QLSV')
	DROP DATABASE QLSV
GO
CREATE DATABASE QLSV

GO
USE QLSV
GO
CREATE TABLE LOP
(
	MALOP CHAR(7) NOT NULL,
	TENLOP NVARCHAR(50) UNIQUE(TENLOP),
	SISO TINYINT CHECK(SISO BETWEEN 20 AND 60),
	PRIMARY KEY(MALOP)
)
GO
CREATE TABLE MONHOC
(
	MAMH CHAR(6),
	TENMH NVARCHAR(50) NOT NULL,
	TCLT TINYINT CHECK(TCLT>=0),
	TCTH TINYINT CHECK(TCTH>=0),
	PRIMARY KEY(MAMH)
)
GO
CREATE TABLE SINHVIEN
(
	MSSV CHAR(6),
	HOTEN NVARCHAR(100) NOT NULL,
	NTNS DATETIME CHECK(YEAR(GETDATE())-YEAR(NTNS)>=18),
	PHAI BIT CHECK(PHAI IN(0,1)) DEFAULT '1',
	MALOP CHAR(7) NOT NULL,
	PRIMARY KEY(MSSV),
	FOREIGN KEY(MALOP) REFERENCES LOP(MALOP) ON UPDATE CASCADE
)
GO
CREATE TABLE DIEMSV
(
	MSSV CHAR(6),
	MAMH CHAR(6),
	DIEM FLOAT CHECK(DIEM IS NULL OR DIEM BETWEEN 0 AND 10),
	PRIMARY KEY(MSSV,MAMH),
	FOREIGN KEY(MSSV) REFERENCES SINHVIEN(MSSV) ON UPDATE CASCADE,
	FOREIGN KEY(MAMH) REFERENCES MONHOC(MAMH) ON UPDATE CASCADE
)
GO
INSERT LOP VALUES ('18DTH01',N'CNTT Khóa 18 Lớp 1',50)
INSERT LOP VALUES ('18DTH02',N'CNTT Khóa 18, Lớp 2',45)
INSERT LOP VALUES ('19DTH01',N'CNTT Khóa 19, Lớp 1',55)
INSERT LOP VALUES ('19DTH02',N'CNTT Khóa 19, Lớp 2',50)
INSERT LOP VALUES ('19DTH03',N'CNTT Khóa 19, Lớp 3',40)
GO
INSERT MONHOC VALUES ('COS201',N'Kỹ thuật lập trình',2,1)
INSERT MONHOC VALUES ('COS202',N'Lý thuyết đồ thị',2,1)
INSERT MONHOC VALUES ('COS203',N'CSDLvà quản trị CSDL',3,0)
INSERT MONHOC VALUES ('COS204',N'Phân tích thiết kế hệ thống',3,0)
INSERT MONHOC VALUES ('COS205',N'CSDL phân tán',3,0)
GO
SET DATEFORMAT DMY
GO
INSERT SINHVIEN VALUES ('170001',N'Lê Hoài An','12/10/1999',1,'18DTH01')
INSERT SINHVIEN VALUES ('180002',N'Nguyễn Thị Hòa Bình','20/11/2000',1,'18DTH01')
INSERT SINHVIEN VALUES ('180003',N'Phạm Tường Châu','07/06/2000',0,'18DTH02')
INSERT SINHVIEN VALUES ('180004',N'Trần Công Danh','31/01/2000',0,'19DTH01')
GO
INSERT DIEMSV VALUES ('170001','COS201',10.0)
INSERT DIEMSV VALUES ('170001','COS202',10.0)
INSERT DIEMSV VALUES ('170001','COS203',10.0)
INSERT DIEMSV VALUES ('170001','COS204',10.0)
INSERT DIEMSV VALUES ('170001','COS205',10.0)
INSERT DIEMSV VALUES ('180002','COS201',3.5)
INSERT DIEMSV VALUES ('180002','COS202',7.0)
INSERT DIEMSV VALUES ('180003','COS201',8.5)
INSERT DIEMSV VALUES ('180003','COS202',2.0)
INSERT DIEMSV VALUES ('180003','COS203',6.5)
INSERT DIEMSV VALUES ('180004','COS201',8.0)
INSERT DIEMSV VALUES ('180004','COS204',NULL)


--Thực hiện các câu hỏi sau bằng ngôn ngữ SQL:
--1-	Thêm một dòng mới vào bảng SINHVIEN với giá trị:


--XOÁ THỬ
DELETE FROM SINHVIEN WHERE MSSV='190001'

SELECT * FROM SINHVIEN

select * into SV
from SINHVIEN

select * 
from SV

DELETE FROM SV WHERE MSSV = '180002'
--2-	Hãy đổi tên môn học ‘Lý thuyết đồ thị ’thành ‘Toán rời rạc’.

SELECT * INTO MH
FROM MONHOC

UPDATE MONHOC
SET TENMH = N'Toán rời rạc'
WHERE TENMH = N'Lý thuyết đồ thị'

SELECT * FROM MH
--3-	Hiển thị tên các môn học không có thực hành.
SELECT *
FROM MONHOC
WHERE TCTH <= 0 OR TCTH = NULL
--4-	Hiển thị tên các môn học vừa có lý thuyết, vừa có thực hành.
SELECT *
FROM MONHOC
WHERE TCLT > 0 AND TCTH > 0
--5-	In ra tên các môn học có ký tự đầu của tên là chữ ‘C’.
SELECT *
FROM MONHOC
WHERE TENMH LIKE 'C%'
--6-	Liệt kê thông tin những sinh viên mà họ chứa chữ ‘Thị’.
SELECT *
FROM SINHVIEN
WHERE HOTEN LIKE N'%Thị%'
--7-	In ra 2 lớp có sĩ số đông nhất (bằng nhiều cách). 
--Hiển thị: Mã lớp, Tên lớp, Sĩ số. Nhận xét?
--C1
SELECT TOP 2 *
FROM LOP
ORDER BY SISO DESC
--C2
SELECT *
FROM LOP
ORDER BY SISO DESC

--C3

--8-	In danh sách SV theo từng lớp: MSSV, Họ tên SV, 
--Năm sinh, Phái (Nam/Nữ).
SELECT L.TENLOP, MSSV, HOTEN, YEAR(NTNS) AS 'NAM SINH', CASE WHEN PHAI = 1 THEN 'NAM'
WHEN PHAI = 0 THEN N'NỮ' END PHAI
FROM SINHVIEN S, LOP L
WHERE S.MALOP = L.MALOP

--9-	Cho biết những sinh viên có tuổi ≥ 20, thông tin gồm:
--Họ tên sinh viên, Ngày sinh, Tuổi.
SELECT HOTEN, YEAR(NTNS) AS N'NGAY SINH', YEAR(GETDATE()) - YEAR(NTNS) AS 'AGE' 
FROM SINHVIEN
WHERE YEAR(GETDATE()) - YEAR(NTNS) >= 20

--10-	Liệt kê tên các môn học SV đã dự thi nhưng chưa có điểm.
SELECT *
FROM DIEMSV
WHERE DIEM IS NULL
--11-	Liệt kê kết quả học tập của SV có mã số 170001.
--Hiển thị: MSSV, HoTen, TenMH, Diem.
SELECT D.MSSV, HOTEN, TENMH, DIEM
FROM SINHVIEN S, DIEMSV D, MONHOC M
WHERE S.MSSV = D.MSSV AND D.MAMH = M.MAMH AND D.MSSV = '170001'
--12-	Liệt kê tên sinh viên và mã môn học mà sv 
--đó đăng ký với điểm trên 7 điểm.
SELECT HOTEN, MAMH, DIEM
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV and DIEM >= 7
--13-	Liệt tên môn học cùng số lượng SV đã học và đã có điểm.
SELECT TENMH, COUNT(DIEM) AS SL
FROM MONHOC M, DIEMSV D
WHERE M.MAMH = D.MAMH
GROUP BY TENMH
--14-	Liệt kê tên SV và điểm trung bình của SV đó.
SELECT HOTEN, ROUND(AVG(DIEM), 2) AS 'DIEMTB'
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV
GROUP BY HOTEN
--15-	Liệt kê tên sinh viên đạt điểm cao nhất của môn học ‘Kỹ thuật lập trình’.
SELECT TOP 1 HOTEN , MAX(DIEM) AS 'MAX DIEM'
FROM SINHVIEN S, DIEMSV D, MONHOC M
WHERE S.MSSV = D.MSSV AND D.MAMH = M.MAMH AND TENMH = N'Kỹ thuật lập trình'
GROUP BY HOTEN
ORDER BY 2 DESC
--16-	Liệt kê tên SV có điểm trung bình cao nhất.
SELECT TOP 1 HOTEN , AVG(DIEM) AS 'MAX DIEM TB'
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV
GROUP BY HOTEN
ORDER BY 2 DESC
--17-	Liệt kê tên SV chưa học môn ‘Toán rời rạc’.
SELECT HOTEN
FROM SINHVIEN 
WHERE HOTEN NOT IN(
 SELECT HOTEN
 FROM SINHVIEN S, DIEMSV D, MONHOC M
 WHERE S.MSSV = D.MSSV AND M.MAMH = D.MAMH AND TENMH = N'Toán rời rạc'
)

--18-	Cho biết sinh viên có năm sinh cùng với sinh viên tên ‘Danh’.
SELECT HOTEN
FROM SINHVIEN
WHERE YEAR(NTNS) = (
 SELECT YEAR(NTNS)
 FROM SINHVIEN
 WHERE HOTEN LIKE '%Danh'
)
--19-	Cho biết tổng sinh viên và tổng số sinh viên nữ.
SELECT COUNT(MSSV) AS 'TONG SINH VIEN', COUNT(CASE 
WHEN PHAI = '0' THEN 1
ELSE NULL END) AS 'TONG SINH VIEN NU'
FROM SINHVIEN

--20-	Cho biết danh sách các sinh viên rớt ít nhất 1 môn.
SELECT HOTEN
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV AND DIEM < 5
--21-	Cho biết MSSV, Họ tên SV đã học và có điểm ít nhất 3 môn.
SELECT HOTEN 
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV
GROUP BY HOTEN
HAVING COUNT(DIEM) >= 3
--22-	In danh sách sinh viên có điểm môn
--‘Kỹ thuật lập trình’ cao nhất theo từng lớp.
--KẾT QUẢ CỦA SINH VIÊN

--ĐIỂM CAO NHẤT CỦA TỪNG LỚP MÔN KỸ THUẬT LẬP TRÌNH
--CÁCH 1
SELECT A.MALOP, A.HOTEN, A.TENMH, A.[DIEM CAO NHAT]
FROM
(
   SELECT MALOP , HOTEN, TENMH, MAX(DIEM) AS 'DIEM CAO NHAT'
   FROM SINHVIEN S, DIEMSV D, MONHOC M
   WHERE S.MSSV = D.MSSV AND D.MAMH = M.MAMH AND TENMH = N'Kỹ thuật lập trình'
   GROUP BY MALOP , HOTEN, TENMH
) A 
JOIN
(
SELECT MALOP, MAX(DIEM) AS 'DIEM CAO NHAT LOP'
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV
GROUP BY MALOP
) B ON A.MALOP = B.MALOP

WHERE A.[DIEM CAO NHAT] = B.[DIEM CAO NHAT LOP]

--CÁCH 2
SELECT S.HOTEN, L.TENLOP, D.DIEM
FROM SINHVIEN S, MONHOC M, DIEMSV D, LOP L
WHERE  S.MSSV = D.MSSV AND D.MAMH = M.MAMH
AND M.TENMH = N'Kỹ thuật lập trình'
AND D.DIEM = (
    SELECT MAX(D2.DIEM)
    FROM SINHVIEN S2
    JOIN DIEMSV D2 ON S2.MSSV = D2.MSSV
    JOIN LOP L2 ON S2.MALOP = L2.MALOP
    WHERE L2.TENLOP = L.TENLOP AND D2.MAMH = M.MAMH
);

--23-	In danh sách sinh viên có điểm cao nhất theo từng môn, từng lớp.
--KẾT QUẢ THI CỦA SINH VIÊN
--ĐIỂM CAO NHẤT CỦA TỪNG MÔN THEO TỪNG LỚP
--CÁCH 1
SELECT A.MALOP, A.HOTEN, A.TENMH, A.[DIEM CAO NHAT]
FROM
(
   SELECT MALOP , HOTEN, TENMH, MAX(DIEM) AS 'DIEM CAO NHAT'
   FROM SINHVIEN S, DIEMSV D, MONHOC M
   WHERE S.MSSV = D.MSSV AND D.MAMH = M.MAMH
   GROUP BY MALOP , HOTEN, TENMH
) A 
JOIN
(
SELECT MALOP, TENMH, MAX(DIEM) AS 'DIEM CAO NHAT MON'
FROM MONHOC M, DIEMSV D, SINHVIEN S
WHERE D.MAMH = M.MAMH AND S.MSSV = D.MSSV
GROUP BY TENMH, MALOP
) B ON A.TENMH = B.TENMH
WHERE A.[DIEM CAO NHAT] = B.[DIEM CAO NHAT MON]
--CÁCH 2
SELECT S.HOTEN, L.TENLOP, M.TENMH, D.DIEM
FROM SINHVIEN S, MONHOC M, DIEMSV D, LOP L
WHERE  S.MSSV = D.MSSV AND D.MAMH = M.MAMH
AND D.DIEM = (
    SELECT MAX(D2.DIEM)
    FROM SINHVIEN S2
    JOIN DIEMSV D2 ON S2.MSSV = D2.MSSV
    JOIN LOP L2 ON S2.MALOP = L2.MALOP
    WHERE L2.TENLOP = L.TENLOP AND D2.MAMH = M.MAMH
);
--24-	Cho biết những sinh viên đạt điểm cao nhất của từng môn.
--CÁCH 1
SELECT A.MALOP, A.HOTEN, A.TENMH, A.[DIEM CAO NHAT]
FROM
(
   SELECT MALOP , HOTEN, TENMH, MAX(DIEM) AS 'DIEM CAO NHAT'
   FROM SINHVIEN S, DIEMSV D, MONHOC M
   WHERE S.MSSV = D.MSSV AND D.MAMH = M.MAMH
   GROUP BY MALOP , HOTEN, TENMH
) A 
JOIN
(
SELECT TENMH, MAX(DIEM) AS 'DIEM CAO NHAT MON'
FROM MONHOC M, DIEMSV D
WHERE D.MAMH = M.MAMH
GROUP BY TENMH
) B ON A.TENMH = B.TENMH

WHERE A.[DIEM CAO NHAT] = B.[DIEM CAO NHAT MON]
--CÁCH 2
SELECT S.HOTEN, M.TENMH, D.DIEM
FROM SINHVIEN S, MONHOC M, DIEMSV D
WHERE  S.MSSV = D.MSSV AND D.MAMH = M.MAMH
AND D.DIEM = (
    SELECT MAX(D2.DIEM)
    FROM SINHVIEN S2
    JOIN DIEMSV D2 ON S2.MSSV = D2.MSSV
    WHERE D2.MAMH = M.MAMH
);
--25-	Cho biết MSSV, Họ tên SV chưa đăng ký học môn nào.
SELECT S.MSSV, HOTEN
FROM SINHVIEN S, DIEMSV D
WHERE S.MSSV = D.MSSV AND S.MSSV NOT IN (
   SELECT MSSV
   FROM DIEMSV
)
--CÁCH 2
SELECT S.MSSV, HOTEN
FROM SINHVIEN S
LEFT JOIN
DIEMSV D ON S.MSSV = D.MSSV
WHERE D.MSSV IS NULL
--27-	Đếm số sinh viên nam, nữ theo từng lớp.
SELECT MALOP, COUNT(CASE
WHEN PHAI = '1' THEN 1
ELSE NULL END) AS 'TONG SINHVIEN NAM',
COUNT(CASE
WHEN PHAI = '0' THEN 1
ELSE NULL END) AS 'TONG SINHVIEN NU'
FROM SINHVIEN 
GROUP BY MALOP


--28-	Cho biết những sinh viên đã học tất cả các môn nhưng không rớt môn nào.

SELECT HOTEN
FROM SINHVIEN S, DIEMSV D, MONHOC M
WHERE S.MSSV = D.MSSV AND M.MAMH = D.MAMH
GROUP BY HOTEN
HAVING COUNT(CASE WHEN DIEM >= 5 THEN 1
ELSE NULL END) = COUNT(M.MAMH)

--29-	Xoá tất cả những sinh viên chưa dự thi môn nào.
SELECT * INTO TEST_SINHVIEN
FROM SINHVIEN

SELECT *
FROM TEST_SINHVIEN

DELETE FROM TEST_SINHVIEN
WHERE MSSV NOT IN(
  SELECT MSSV
  FROM DIEMSV
)

--30-	Cho biết những môn đã được tất cả các sinh viên đăng ký học.

SELECT TENMH
FROM DIEMSV D, MONHOC M
WHERE D.MAMH = M.MAMH 
GROUP BY TENMH
HAVING COUNT(D.MAMH) = (
    SELECT COUNT(MSSV)
    FROM SINHVIEN
)

